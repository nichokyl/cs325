MinLockers(balls[1,...,n], keys[1,...,n], n, B, K):
int L[B]

for i = 0 to B
	L[0]
	
for i = 1 to B
	if balls[i] == 0
		L[i] = L[i-1]
	else if balls[i] == 1 and keys[i] == 0
		distance = Dist(balls, keys, i, n)
		L[i] = 1 + distance + L[i-distance]
	else if balls[i] == 1 and keys[i] == 1
		L[i] = 1 + L[i-1]
			
Dist(balls[1,...,n], keys[1,...,n], i, n):
for j = i to n
	if keys[j] == 1
		distance = j - i
		if distance < minDistance
			minDistance = distance
			for k = i to j
				keys[k+1] = 1
				keys[k-1] = 1

for j = 0 to i
	if keys[j] == 1
		distance = j - i
		if distance < minDistance
			minDistance = distance
			for k = j to i
				keys[k+1] = 1
				keys[k-1] = 1
		
return minDistance
